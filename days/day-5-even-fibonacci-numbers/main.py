# Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
# By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34 , 55, 89
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
# find the sum of the even-valued terms.

#Starting vars
UPPER_LIMIT = 4000000

fibonacci_sequence = [1, 2]
sum_even = 2

#fibonacci algorithm:
# F(n) = F(n-1) + F(n-2)
# n is len(fibonacci_sequence)

def get_next_element(next_index):
    #using next index, calculate the value of the next element
    return fibonacci_sequence[next_index-2] + fibonacci_sequence[next_index-1]

while fibonacci_sequence[-1] <= 90:
    next_index = len(fibonacci_sequence)
    next_element = get_next_element(next_index=next_index)
    #append to fibonacci_sequence
    fibonacci_sequence.append(next_element)
    #check if next_element is even
    # if True, add next_element to sum_even
    if next_element % 2 == 0:
        sum_even += next_element
    next_index += 1

print(sum_even)
print(fibonacci_sequence)

# def main():
#     pass

# if __name__ == '__main__':
#     main()

