# Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
# By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34 , 55, 89
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
# find the sum of the even-valued terms.

#Starting vars
UPPER_LIMIT = 4000000

fibonacci_sequence = [1, 2]
sum_even = 0

#fibonacci algorithm:
# F(n) = F(n-1) + F(n-2)
# n is len(fibonacci_sequence)

def get_next_element(next_index):
    #using next index, assign a value to it
    next_element = fibonacci_sequence[next_index-2] + fibonacci_sequence[next_index-1]
    #append next element to fibonacci sequence
    fibonacci_sequence.append(next_element)

while fibonacci_sequence[-1] != 10:
    next_index = len(fibonacci_sequence)
    get_next_element(next_index=next_index)
    next_index += 1

print(fibonacci_sequence)


# for i in range:
#     fibonacci_sequence[i] = fibonacci_sequence[i-3] + fibonacci_sequence[i-2]
#     fibonacci_sequence.append(fibonacci_sequence[i])

def main():
    pass

if __name__ == '__main__':
    main()

